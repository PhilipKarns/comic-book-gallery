
@*to make the view strongly typed, add the entire model reference to the view, including the array brackets so the view knows it's expecting a model. This aligns with the type of data the controller
    is passing to the view.*@
@*we get the Layout view from the _ViewStart.cshtml file in our Views folder. See that folder for more info about how the layout is applied to a view page*@
@model ComicBookGallery.Models.ComicBook[]
      
@{
        ViewBag.Title = "Comic Books";
}

<h2>@ViewBag.Title</h2>

<div class="row">
    @*loop through each comic book in the ComicBook repository*@
    @foreach (var comicBook in Model)
    {
        <div class="col-md-3">
            @*the 3rd parameter is an anonymous type using object initializer syntax. We don't ahve to add a RouteValues class to our project. Instead we use a C#
                feature called Anonymous types. This allows us to instantiate objects without defining a class beforehand. The h4 code creates a hyperlink that will take us to the detail view for the comic book link we
                select*@
            <h4>@Html.ActionLink(comicBook.DisplayText, "Detail", new  { id = comicBook.Id })</h4>
            <a href="@Url.Action("Detail", new { id = comicBook.Id })">
                <img src="/Images/@comicBook.CoverImageFileName"
                     alt="@comicBook.DisplayText"
                     class="img-responsive" />
            </a>
        </div>
    }

</div>
